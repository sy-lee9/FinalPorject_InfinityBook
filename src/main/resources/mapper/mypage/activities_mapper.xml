<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.book.mypage.dao.ActivitiesDAO">
	
	<select id="changeList" resultType="hashMap">
		/* changeList - 교환내역 리스트 불러오기*/
			(SELECT
			    c.change_idx
			    ,c.change_state
			    ,l1.library_idx AS changeBook_idx
			    ,l1.library_cover AS changeBook_cover
			    ,l1.library_title AS changeBook
			    ,l2.library_cover AS myBook_cover
			    ,l2.library_title AS myBook
			    ,m1.member_nickname AS my_nickName
			    ,m2.member_nickname AS changer
			    ,m2.member_idx AS changer_idx
			    ,c.change_date
			    ,(SELECT 
			    	COUNT(review_idx) 
			    FROM review 
			    WHERE review_transaction_type = 0 
			    AND review_transaction_idx = c.change_idx) 
			    AS reviewChk
			FROM `change` c
			INNER JOIN `library` l1 ON l1.library_idx = c.library_book
			INNER JOIN `library` l2 ON l2.library_idx = c.library_book2			
			INNER JOIN `member` m1 ON m1.member_idx = #{loginIdx}
			INNER JOIN `member` m2 ON m2.member_idx = 
				(SELECT 
					l.member_idx 
				FROM `library` l 
				WHERE l.library_idx = c.library_book)
			WHERE c.member_idx = #{loginIdx})
		UNION
			(SELECT
			    c.change_idx
			    ,c.change_state
			    ,l1.library_idx AS changeBook_idx
			    ,l1.library_cover AS changeBook_cover
			    ,l1.library_title AS changeBook
			    ,l2.library_cover AS myBook_cover
			    ,l2.library_title AS myBook
			    ,m1.member_nickname AS my_nickName
			    ,m2.member_nickname AS changer
			    ,m2.member_idx AS changer_idx
			    ,c.change_date
			    ,(SELECT 
			    	COUNT(review_idx) 
			    FROM review 
			    WHERE review_transaction_type = 0 
			    AND review_transaction_idx = c.change_idx) 
			    AS reviewChk
			FROM `change` c
			INNER JOIN `library` l1 ON c.library_book = l1.library_idx
			INNER JOIN `library` l2 ON c.library_book2 = l2.library_idx
			INNER JOIN `member` m1 ON m1.member_idx = l1.member_idx
			INNER JOIN `member` m2 ON m2.member_idx = c.member_idx
			WHERE c.library_book 
			IN 
				(SELECT 
					l.library_idx 
				FROM `library` l 
				WHERE l.member_idx = #{loginIdx}))
			ORDER BY change_state ASC 
			LIMIT 5 
			OFFSET #{offset};
	</select>
	
	<select id="changeListSearch" resultType="hashMap">
		/* changeListSearch - 검색된 교환내역 리스트 불러오기 */
			(SELECT
			    c.change_idx
			    ,c.change_state
			    ,l1.library_idx AS changeBook_idx
			    ,l1.library_cover AS changeBook_cover
			    ,l1.library_title AS changeBook
			    ,l2.library_cover AS myBook_cover
			    ,l2.library_title AS myBook
			    ,m1.member_nickname AS my_nickName
			    ,m2.member_nickname AS changer
			    ,m2.member_idx AS changer_idx
			    ,c.change_date
			    ,(SELECT 
			    	COUNT(r.review_idx) 
			    FROM review r 
			    WHERE r.review_transaction_type = 0 
			    AND r.review_transaction_idx = c.change_idx) 
			    AS reviewChk
			FROM `change` c
		    INNER JOIN `library` l1 ON l1.library_idx = c.library_book
		    INNER JOIN `library` l2 ON l2.library_idx = c.library_book2
		    INNER JOIN `member` m1 ON m1.member_idx = #{loginIdx}
		    INNER JOIN `member` m2 ON m2.member_idx = 
		    	(SELECT 
		    		l.member_idx 
		    	FROM `library` l 
		    	WHERE l.library_idx = c.library_book)
			WHERE c.member_idx = #{loginIdx} 
			AND 
				(l1.library_title LIKE CONCAT('%', #{searchText}, '%') 
				OR 
				l2.library_title LIKE CONCAT('%', #{searchText}, '%')))
		UNION
			(SELECT
			    c.change_idx
			    ,c.change_state
			    ,l1.library_idx AS changeBook_idx
			    ,l1.library_cover AS changeBook_cover
			    ,l1.library_title AS changeBook
			    ,l2.library_cover AS myBook_cover
			    ,l2.library_title AS myBook
			    ,m1.member_nickname AS my_nickName
			    ,m2.member_nickname AS changer
			    ,m2.member_idx AS changer_idx
			    ,c.change_date
			    ,(SELECT 
			    	COUNT(r.review_idx) 
			    FROM review r 
			    WHERE r.review_transaction_type = 0 
			    AND r.review_transaction_idx = c.change_idx) AS reviewChk
			FROM `change` c
		    INNER JOIN `library` l1 ON c.library_book = l1.library_idx
		    INNER JOIN `library` l2 ON c.library_book2 = l2.library_idx
		    INNER JOIN `member` m1 ON m1.member_idx = l1.member_idx
		    INNER JOIN `member` m2 ON m2.member_idx = c.member_idx
			WHERE c.library_book IN 
				(SELECT 
					l.library_idx 
				FROM `library` l 
				WHERE l.member_idx = #{loginIdx}) 
				AND 
					(l1.library_title LIKE CONCAT('%', #{searchText}, '%') 
					OR 
					l2.library_title LIKE CONCAT('%', #{searchText}, '%')))
			ORDER BY change_state ASC 
			LIMIT 5 OFFSET #{offset};
	</select>
	
	<select id="rentList" resultType="hashMap">
		/* rentList - 대여내역 리스트 불러오기*/
			(SELECT 
				rent_idx
				,rent_state
				,l.library_idx
				,l.library_cover AS cover
				,l.library_title AS title
				,(SELECT 
					m2.member_idx 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) AS lenderIdx
				,(SELECT 
					m2.member_nickname 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lender
				,r.member_idx AS memberIdx
				,m.member_nickname AS renter
				,rent_startdate
				,rent_enddate
				,rent_deposit
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 0 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS memberReview  
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 1 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS bookReview		
			FROM rent r
			INNER JOIN library l ON l.library_idx = r.library_idx	
			INNER JOIN `member` m ON m.member_idx = r.member_idx 
			WHERE r.member_idx = #{loginIdx})
		UNION
			(SELECT 
				rent_idx
				,rent_state
				,l.library_idx
				,l.library_cover AS cover
				,l.library_title AS title
				,(SELECT 
					m2.member_idx 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lenderIdx
				,(SELECT 
					m2.member_nickname 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lender
				,r.member_idx AS memberIdx
				,m.member_nickname AS renter
				,rent_startdate
				,rent_enddate
				,rent_deposit   
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 0 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS memberReview   
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 1 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS bookReview			
			FROM rent r
			INNER JOIN library l ON l.library_idx = r.library_idx 
			INNER JOIN `member` m ON m.member_idx = r.member_idx
			WHERE l.library_idx 
			IN 
				(SELECT 
					l2.library_idx 
				FROM library l2 
				WHERE member_idx = #{loginIdx}))
			ORDER BY rent_state ASC  
			LIMIT 5 OFFSET #{offset}
	</select>
	
	<select id="rentListSearch" resultType="hashMap">
		/* rentListSearch - 검색된 대여내역 리스트 불러오기*/
			(SELECT 
				rent_idx
				,rent_state
				,l.library_idx
				,l.library_cover AS cover
				,l.library_title AS title
				,(SELECT 
					m2.member_idx 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lenderIdx
				,(SELECT 
					m2.member_nickname 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lender
				,r.member_idx AS memberIdx
				,m.member_nickname AS renter
				,rent_startdate
				,rent_enddate
				,rent_deposit
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 0 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS memberReview  
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 1 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS bookReview		
			FROM rent r
			INNER JOIN library l ON l.library_idx = r.library_idx	
			INNER JOIN `member` m ON m.member_idx = r.member_idx 
			WHERE r.member_idx = #{loginIdx} 
			AND l.library_title LIKE CONCAT('%', #{searchText}, '%'))
		UNION
			(SELECT 
				rent_idx
				,rent_state
				,l.library_idx
				,l.library_cover AS cover
				,l.library_title AS title
				,(SELECT 
					m2.member_idx 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lenderIdx
				,(SELECT 
					m2.member_nickname 
				FROM member m2 
				WHERE m2.member_idx = l.member_idx) 
				AS lender
				,r.member_idx AS memberIdx
				,m.member_nickname AS renter
				,rent_startdate
				,rent_enddate
				,rent_deposit
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 0 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS memberReview
				,(SELECT 
					COUNT(rv.review_idx) 
				FROM review rv 
				WHERE rv.review_type = 1 
				AND rv.review_transaction_type = 1 
				AND rv.review_transaction_idx = r.rent_idx) 
				AS bookReview			
			FROM rent r
			INNER JOIN library l ON l.library_idx = r.library_idx 
			INNER JOIN `member` m ON m.member_idx = r.member_idx
			WHERE l.library_idx 
			IN 
				(SELECT 
					l2.library_idx 
				FROM library l2 
				WHERE member_idx = #{loginIdx}) 
			AND l.library_title LIKE CONCAT('%', #{searchText}, '%'))
			ORDER BY rent_state ASC 
			LIMIT 5 OFFSET #{offset}
	</select>

</mapper>