<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.book.mypage.dao.TrackerDAO">

	<select id="bookInfoChk" resultType="int">
		/* bookInfoChk - BOOK 테이블에 저장된 책 정보 확인 */
		SELECT 
			COUNT(isbn) 
		FROM book 
		WHERE isbn = #{param1}
	</select>
	
	<insert id="saveBook" parameterType="TrackerDTO">
		/* saveBook - BOOK 테이블에 책 정보 저장 */
		INSERT INTO book
			(isbn
			,title
			,cover
			,author
			,publisher
			,description
			,pubdate
			,totalPage
			,reg_member_idx
			,reg_screen)
		VALUES
			(#{isbn}
			,#{title}
			,#{cover}
			,#{author}
			,#{publisher}
			,#{description}
			,#{pubdate}
			,#{totalPage}
			,#{loginIdx}
			,#{jsp})
	</insert>
	
	 <insert id="saveTracker" parameterType="HashMap">
	 	/* saveTracker - 트래커에 책정보 저장 */
		INSERT INTO tracker
			(member_idx
			,isbn
			,tracker_readpage
			,tracker_startdate
			,tracker_enddate
			,reg_member_idx
			,reg_screen)
		VALUES
			(#{loginIdx}
			,#{isbn}
			,			
			<choose>
	            <when test="state.equals('read')">
	                (SELECT 
	                	totalPage 
	                FROM book 
	                WHERE isbn = #{isbn})
	            </when>
	            <otherwise>
	                #{readPage}
	            </otherwise>
	        </choose>
			,#{startDate}
			,#{endDate}
			,#{loginIdx}
			,#{jsp})
	</insert>
	
	<select id="getTotalPage" resultType="int">
		/* getTotalPage - 총페이지 수 가져오기 */
		SELECT 
			totalPage 
		FROM book 
		WHERE isbn = #{param}
	</select>
	
	<select id="getTrackerList" resultType="hashMap">
		/* getTrackerList - 트래커 리스트 불러오기 */
		SELECT
		    (t.tracker_idx) AS trackerIdx
		    ,(t.isbn) AS isbn
		    ,(SELECT title FROM book b WHERE b.isbn = t.isbn) AS title
		    ,(SELECT author FROM book b WHERE b.isbn = t.isbn) AS author
		    ,(SELECT cover FROM book b WHERE b.isbn = t.isbn) AS cover
		    ,(t.tracker_startDate) AS startDate
		    ,(t.tracker_endDate) AS endDate
		    ,FLOOR((t.TRACKER_READPAGE / b.totalPage) * 100) AS progress
		    ,(t.TRACKER_READPAGE) AS readPage
		    ,(SELECT totalPage FROM book b WHERE b.isbn = t.isbn) AS totalPage
		FROM
		    tracker t
		LEFT JOIN
		    book b ON t.isbn = b.isbn
		WHERE
		    t.MEMBER_IDX = #{param}
	    ORDER BY t.TRACKER_READPAGE ASC
	</select>
	
	<select id="trackerDetail" resultType="hashmap">
		/* trackerDetail - 트래커 책 상세정보 불러오기 */
		SELECT 
			t.tracker_idx
			,t.isbn
		    ,(SELECT title FROM book b WHERE b.isbn = t.isbn) AS title
		    ,(SELECT author FROM book b WHERE b.isbn = t.isbn) AS author
		    ,(SELECT cover FROM book b WHERE b.isbn = t.isbn) AS cover
		    ,(t.tracker_startDate) AS startDate
		    ,(t.tracker_endDate) AS endDate
		    ,FLOOR((t.TRACKER_READPAGE / b.totalPage) * 100) AS progress
		    ,(t.TRACKER_READPAGE) AS readPage
		    ,(SELECT totalPage FROM book b WHERE b.isbn = t.isbn) AS totalPage
		FROM
		    tracker t
		LEFT JOIN
		    book b ON t.isbn = b.isbn
		WHERE t.tracker_idx = #{param1}
	</select>
	
	<update id="trackerUpdateBook">
		/* trackerUpdateBook - 트래커 책정보 수정 */ 
		UPDATE tracker 
		SET 
			tracker_startdate = #{startDate}		
			,tracker_readpage = #{readPage}
			,mod_member_idx = #{loginIdx}
			,mod_date = NOW()
			,mod_screen  = #{jsp}
		WHERE member_idx = #{loginIdx}
		AND isbn = #{isbn}		
	</update>
	
	<update id="saveEndDate">
		/* saveEndDate - 독서 종료일 저장 */
		UPDATE tracker 
		SET 
			tracker_enddate = NOW()
		WHERE member_idx = #{param1}
		AND isbn = #{param2}	
	</update>
	
	<delete id="trackerDeleteBook">
		/* trackerDeleteBook - 트래커 기록 삭제 */
		DELETE 
		FROM tracker 
		WHERE isbn = #{param1} 
		AND member_idx = #{param2}
	</delete>
	
	<insert id="trackerAddMemo" parameterType="HashMap">
		/* trackerAddMemo - 메모 저장 */
		INSERT INTO memo
			(member_idx
			,tracker_idx
			,memo_content
			,reg_member_idx
			,reg_screen) 
		VALUES
			(#{loginIdx}
			,#{trackerIdx}
			,#{content}
			,#{loginIdx}
			,#{jsp})
	</insert>

	<select id="getMemoList" resultType="HashMap">
		/* getMemoList - 메모 리스트 불러오기 */
		SELECT 
			memo_idx
			,tracker_idx
			,(memo_content) AS content
			,DATE_FORMAT(memo_regdate, '%Y-%m-%d %H:%i') AS regDate
		FROM memo
		WHERE tracker_idx = #{param}
		ORDER BY memo_regdate DESC
	</select>
	
	<delete id="memoDelete" parameterType="hashMap">
		/* memoDelete - 메모 삭제 */
		DELETE 
		FROM memo 
		WHERE tracker_idx = #{trackerIdx} 
		AND memo_idx = ${memoIdx}
	</delete>

	<select id="getContent" resultType="string">
		/* getContent - 기존 메모 내용 가져오기 */
		SELECT 
			memo_content 
		FROM memo 
		WHERE tracker_idx = #{trackerIdx} 
		AND memo_idx = ${memoIdx}
	</select>

	<update id="memoUpdate" parameterType="hashMap">
		/* memoUpdate - 메모 수정 */
		UPDATE memo SET 
			memo_content = #{content}
			,mod_date = NOW()	
			,mod_screen  = #{jsp}
			,mod_member_idx = #{loginIdx}
		WHERE tracker_idx = #{trackerIdx}
		AND memo_idx = #{memoIdx}	
	</update>

</mapper>